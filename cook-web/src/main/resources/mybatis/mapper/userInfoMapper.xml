<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >  
<mapper namespace="com.colleage.cook.mapper.UserInfoMapper">

	<resultMap type="com.colleage.cook.domain.UserInfo" id="BaseResultMap">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="username" property="username" jdbcType="VARCHAR" />
		<result column="password" property="password" jdbcType="VARCHAR" />
		<result column="avatar" property="avatar" jdbcType="VARCHAR" />
		<result column="create_time" property="create_time" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="last_login" property="last_login" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="INTEGER" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR"/>
		<result column="gender" property="gender" jdbcType="INTEGER"/>
		<result column="favors" property="favors" jdbcType="INTEGER" />
		<result column="follows" property="follows" jdbcType="INTEGER" />
		<result column="signature" property="signature" jdbcType="VARCHAR" />
		<result column="production" property="production" jdbcType="INTEGER" />
		<result column="menus" property="menus" jdbcType="INTEGER" />
		<result column="role_id" property="role_id" jdbcType="INTEGER" />
		<result column="oauth_type" property="oauth_type" jdbcType="INTEGER"/>
	</resultMap>

	<resultMap id="simpleUserInfo" type="com.colleage.cook.vo.SimpleUserInfo">
		<id column="id" property="id" jdbcType="INTEGER"/>
		<result column="username" property="username" jdbcType="VARCHAR"/>
		<result column="nickname" property="nickname" jdbcType="VARCHAR"/>
		<result column="avatar" property="avatar" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="column_list">
		id, username, password, avatar, DATE_FORMAT(create_time, "%Y-%m-%d") create_time, email,
		DATE_FORMAT(last_login, "%Y-%m-%d") last_login, mobile, status, nickname,
		gender, favors, follows, signature, production,
		menus, role_id, oauth_type
	</sql>

	<select id="findUserInfoByUsername" resultMap="BaseResultMap">
        select <include refid="column_list"></include> FROM user_info where username = #{username} and role_id = 1
	</select>

	<select id="findUserInfoByUserId" resultMap="simpleUserInfo">
		select id, username, nickname, avatar FROM user_info where id = #{userId}
	</select>

	<insert id="register">
		insert into user_info(username, password, avatar, create_time, last_login, nickname, gender, oauth_type, email)
		values(#{userInfo.username}, #{userInfo.password}, #{userInfo.avatar}, now(), now(),
		#{userInfo.nickname}, #{userInfo.gender}, #{userInfo.oauth_type}, #{userInfo.email});
	</insert>

	<update id="updateAvatar">
		update user_info set avatar = #{avatar} where username = #{username}
	</update>

	<update id="updateUserInfo">
		update user_info set gender = #{gender}
		<if test="avatar != null and avatar != ''">
			, avatar = #{avatar}
		</if>
		<if test="email != null and email != ''">
			, email = #{email}
		</if>
		<if test="mobile != null and mobile != 0">
			, mobile = #{mobile}
		</if>
		<if test="nickname != null and nickname != ''">
			, nickname = #{nickname}
		</if>
		 where username = #{username}
	</update>

	<update id="updateUserStatus">
		update user_info set status = #{status} where username = #{username}
	</update>

</mapper>